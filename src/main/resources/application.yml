spring:
  application:
    name: weather
  server:
    port: 8081
  cache:
    type: simple
  security:
    user:
      name: user
      password: password
  profiles:
    active: dev
  management:
    endpoint:
      health:
        show-details: always
    endpoints:
      web:
        exposure:
          include: "*"
    health:
      circuitbreakers:
        enabled: true
  resilience4j:
    circuitbreaker:
      instances:
        weather-client:
          failureRateThreshold: 50
          waitDurationInOpenState: 60s
          permittedNumberOfCallsInHalfOpenState: 3
          minimumNumberOfCalls: 5
          slidingWindowType: COUNT_BASED
          slidingWindowSize: 5
          registerHealthIndicator: true
---

spring:
  config:
    activate:
      on-profile: dev
open:
  weather:
    api:
      key: d2929e9483efc82c82c32ee7e02d563e
      url: https://api.openweathermap.org/data/2.5/forecast
logging:
  level:
    org.springframework: INFO

---

spring:
  config:
    activate:
      on-profile: test
open:
  weather:
    api:
      key: d2929e9483efc82c82c32ee7e02d563e
      url: https://api.openweathermap.org/data/2.5/forecast
logging:
  level:
    org.springframework: INFO

---

spring:
  config:
    activate:
      on-profile: prod
open:
  weather:
    api:
      key: d2929e9483efc82c82c32ee7e02d563e
      url: https://api.openweathermap.org/data/2.5/forecast
logging:
  level:
    org.springframework: WARN
